// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  workoutPlans WorkoutPlan[]
  workouts     Workout[]
  goals        Goal[]
  records      PersonalRecord[]

  @@map("users")
}

model Workout {
  id          String   @id @default(cuid())
  userId      String
  name        String
  exercises   Json
  duration    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Add performance indexes
  @@index([userId, createdAt(sort: Desc)])  // Most common query pattern
  @@index([userId])                          // User lookups
  @@index([createdAt])                       // Time-based queries
}

model Goal {
  id          String   @id @default(cuid())
  userId      String
  title       String
  target      Float
  current     Float    @default(0)
  deadline    DateTime?
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, status])
  @@index([userId, deadline])
}

model WorkoutPlan {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  schedule    Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PersonalRecord {
  id          String   @id @default(cuid())
  userId      String
  exercise    String
  value       Float
  unit        String
  recordType  String
  achievedAt  DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, exercise])
  @@index([userId, achievedAt(sort: Desc)])
  @@map("personal_records")
}
